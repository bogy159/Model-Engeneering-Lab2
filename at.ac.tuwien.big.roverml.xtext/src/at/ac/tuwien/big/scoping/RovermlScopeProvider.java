/*
 * generated by Xtext 2.14.0
 */
package at.ac.tuwien.big.scoping;

import org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider;

import at.ac.tuwien.big.roverml.Block;
import at.ac.tuwien.big.roverml.Transition;

/**
 * This class contains custom scoping description.
 * 
 * See
 * https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
public class RovermlScopeProvider extends AbstractDeclarativeScopeProvider {

	/**
	 * TODO: Scoping for the referenced light of the SetLightColor command
	 * 
	 * It is possible to define multiple rovers (and multiple programs) in a rover
	 * environment. A rover program references exactly one rover. If the
	 * SetLightColor command is used, the suggested lights should only be of the
	 * rover referenced in the program defining the command.
	 */

	/**
	 * TODO: Scoping for the source of a transition
	 * 
	 * The suggested commands (source and target) for transitions should only be the
	 * ones defined in the same rover program and the same block as the transitions.
	 * 
	 */

	/**
	 * TODO: Scoping for the target of a transition
	 * 
	 * The suggested commands (source and target) for transitions should only be the
	 * ones defined in the same rover program and the same block as the transitions.
	 */

	/**
	 * GIVEN: Convenience function to retrieve the block of a transition.
	 * 
	 * @param transition Transition for which the block should be retrieved.
	 * @return The block containing the transition.
	 */
	private Block getBlock(Transition transition) {
		return (Block) transition.eContainer();
	}

}
