/*
 * generated by Xtext 2.14.0
 */
package at.ac.tuwien.big.ide.contentassist.antlr;

import at.ac.tuwien.big.ide.contentassist.antlr.internal.InternalRovermlParser;
import at.ac.tuwien.big.services.RovermlGrammarAccess;
import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class RovermlParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(RovermlGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, RovermlGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getComponentAccess().getAlternatives(), "rule__Component__Alternatives");
			builder.put(grammarAccess.getSensorAccess().getAlternatives(), "rule__Sensor__Alternatives");
			builder.put(grammarAccess.getBlockAccess().getAlternatives(), "rule__Block__Alternatives");
			builder.put(grammarAccess.getCommandAccess().getAlternatives(), "rule__Command__Alternatives");
			builder.put(grammarAccess.getTransitionAccess().getAlternatives(), "rule__Transition__Alternatives");
			builder.put(grammarAccess.getQuantityAccess().getAlternatives(), "rule__Quantity__Alternatives");
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getEFloatAccess().getAlternatives_4_0(), "rule__EFloat__Alternatives_4_0");
			builder.put(grammarAccess.getVelocityUnitAccess().getAlternatives(), "rule__VelocityUnit__Alternatives");
			builder.put(grammarAccess.getLengthUnitAccess().getAlternatives(), "rule__LengthUnit__Alternatives");
			builder.put(grammarAccess.getColorAccess().getAlternatives(), "rule__Color__Alternatives");
			builder.put(grammarAccess.getAngleUnitAccess().getAlternatives(), "rule__AngleUnit__Alternatives");
			builder.put(grammarAccess.getTimeUnitAccess().getAlternatives(), "rule__TimeUnit__Alternatives");
			builder.put(grammarAccess.getComparisonOperatorAccess().getAlternatives(), "rule__ComparisonOperator__Alternatives");
			builder.put(grammarAccess.getRoverSystemAccess().getGroup(), "rule__RoverSystem__Group__0");
			builder.put(grammarAccess.getRoverSystemAccess().getGroup_3(), "rule__RoverSystem__Group_3__0");
			builder.put(grammarAccess.getRoverSystemAccess().getGroup_3_3(), "rule__RoverSystem__Group_3_3__0");
			builder.put(grammarAccess.getRoverSystemAccess().getGroup_4(), "rule__RoverSystem__Group_4__0");
			builder.put(grammarAccess.getRoverSystemAccess().getGroup_4_3(), "rule__RoverSystem__Group_4_3__0");
			builder.put(grammarAccess.getRoverAccess().getGroup(), "rule__Rover__Group__0");
			builder.put(grammarAccess.getRoverAccess().getGroup_4(), "rule__Rover__Group_4__0");
			builder.put(grammarAccess.getRoverAccess().getGroup_4_3(), "rule__Rover__Group_4_3__0");
			builder.put(grammarAccess.getGPSAccess().getGroup(), "rule__GPS__Group__0");
			builder.put(grammarAccess.getGPSAccess().getGroup_2(), "rule__GPS__Group_2__0");
			builder.put(grammarAccess.getDistanceSensorAccess().getGroup(), "rule__DistanceSensor__Group__0");
			builder.put(grammarAccess.getDistanceSensorAccess().getGroup_2(), "rule__DistanceSensor__Group_2__0");
			builder.put(grammarAccess.getCompassAccess().getGroup(), "rule__Compass__Group__0");
			builder.put(grammarAccess.getCompassAccess().getGroup_2(), "rule__Compass__Group_2__0");
			builder.put(grammarAccess.getLightAccess().getGroup(), "rule__Light__Group__0");
			builder.put(grammarAccess.getLightAccess().getGroup_2(), "rule__Light__Group_2__0");
			builder.put(grammarAccess.getMotorAccess().getGroup(), "rule__Motor__Group__0");
			builder.put(grammarAccess.getMotorAccess().getGroup_2(), "rule__Motor__Group_2__0");
			builder.put(grammarAccess.getRoverProgramAccess().getGroup(), "rule__RoverProgram__Group__0");
			builder.put(grammarAccess.getBlock_ImplAccess().getGroup(), "rule__Block_Impl__Group__0");
			builder.put(grammarAccess.getBlock_ImplAccess().getGroup_2(), "rule__Block_Impl__Group_2__0");
			builder.put(grammarAccess.getBlock_ImplAccess().getGroup_2_3(), "rule__Block_Impl__Group_2_3__0");
			builder.put(grammarAccess.getBlock_ImplAccess().getGroup_3(), "rule__Block_Impl__Group_3__0");
			builder.put(grammarAccess.getBlock_ImplAccess().getGroup_3_3(), "rule__Block_Impl__Group_3_3__0");
			builder.put(grammarAccess.getRepeatAccess().getGroup(), "rule__Repeat__Group__0");
			builder.put(grammarAccess.getRepeatAccess().getGroup_4(), "rule__Repeat__Group_4__0");
			builder.put(grammarAccess.getRepeatAccess().getGroup_4_3(), "rule__Repeat__Group_4_3__0");
			builder.put(grammarAccess.getRepeatAccess().getGroup_5(), "rule__Repeat__Group_5__0");
			builder.put(grammarAccess.getRepeatAccess().getGroup_5_3(), "rule__Repeat__Group_5_3__0");
			builder.put(grammarAccess.getMoveAccess().getGroup(), "rule__Move__Group__0");
			builder.put(grammarAccess.getSetLightColorAccess().getGroup(), "rule__SetLightColor__Group__0");
			builder.put(grammarAccess.getSetLightColorAccess().getGroup_6(), "rule__SetLightColor__Group_6__0");
			builder.put(grammarAccess.getSetLightColorAccess().getGroup_9(), "rule__SetLightColor__Group_9__0");
			builder.put(grammarAccess.getRotateAccess().getGroup(), "rule__Rotate__Group__0");
			builder.put(grammarAccess.getWaitAccess().getGroup(), "rule__Wait__Group__0");
			builder.put(grammarAccess.getTerminateAccess().getGroup(), "rule__Terminate__Group__0");
			builder.put(grammarAccess.getTransition_ImplAccess().getGroup(), "rule__Transition_Impl__Group__0");
			builder.put(grammarAccess.getDistanceSensorTriggerAccess().getGroup(), "rule__DistanceSensorTrigger__Group__0");
			builder.put(grammarAccess.getGpsTriggerAccess().getGroup(), "rule__GpsTrigger__Group__0");
			builder.put(grammarAccess.getCompassTriggerAccess().getGroup(), "rule__CompassTrigger__Group__0");
			builder.put(grammarAccess.getTimeAccess().getGroup(), "rule__Time__Group__0");
			builder.put(grammarAccess.getAngleAccess().getGroup(), "rule__Angle__Group__0");
			builder.put(grammarAccess.getVelocityAccess().getGroup(), "rule__Velocity__Group__0");
			builder.put(grammarAccess.getLengthAccess().getGroup(), "rule__Length__Group__0");
			builder.put(grammarAccess.getPositionAccess().getGroup(), "rule__Position__Group__0");
			builder.put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
			builder.put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
			builder.put(grammarAccess.getEFloatAccess().getGroup(), "rule__EFloat__Group__0");
			builder.put(grammarAccess.getEFloatAccess().getGroup_4(), "rule__EFloat__Group_4__0");
			builder.put(grammarAccess.getEIntAccess().getGroup(), "rule__EInt__Group__0");
			builder.put(grammarAccess.getRoverSystemAccess().getRoversAssignment_3_2(), "rule__RoverSystem__RoversAssignment_3_2");
			builder.put(grammarAccess.getRoverSystemAccess().getRoversAssignment_3_3_1(), "rule__RoverSystem__RoversAssignment_3_3_1");
			builder.put(grammarAccess.getRoverSystemAccess().getRoverProgramsAssignment_4_2(), "rule__RoverSystem__RoverProgramsAssignment_4_2");
			builder.put(grammarAccess.getRoverSystemAccess().getRoverProgramsAssignment_4_3_1(), "rule__RoverSystem__RoverProgramsAssignment_4_3_1");
			builder.put(grammarAccess.getRoverAccess().getNameAssignment_2(), "rule__Rover__NameAssignment_2");
			builder.put(grammarAccess.getRoverAccess().getComponentsAssignment_4_2(), "rule__Rover__ComponentsAssignment_4_2");
			builder.put(grammarAccess.getRoverAccess().getComponentsAssignment_4_3_1(), "rule__Rover__ComponentsAssignment_4_3_1");
			builder.put(grammarAccess.getGPSAccess().getNameAssignment_1(), "rule__GPS__NameAssignment_1");
			builder.put(grammarAccess.getGPSAccess().getKindAssignment_2_2(), "rule__GPS__KindAssignment_2_2");
			builder.put(grammarAccess.getDistanceSensorAccess().getNameAssignment_1(), "rule__DistanceSensor__NameAssignment_1");
			builder.put(grammarAccess.getDistanceSensorAccess().getKindAssignment_2_2(), "rule__DistanceSensor__KindAssignment_2_2");
			builder.put(grammarAccess.getCompassAccess().getNameAssignment_1(), "rule__Compass__NameAssignment_1");
			builder.put(grammarAccess.getCompassAccess().getKindAssignment_2_2(), "rule__Compass__KindAssignment_2_2");
			builder.put(grammarAccess.getLightAccess().getNameAssignment_1(), "rule__Light__NameAssignment_1");
			builder.put(grammarAccess.getLightAccess().getKindAssignment_2_2(), "rule__Light__KindAssignment_2_2");
			builder.put(grammarAccess.getMotorAccess().getNameAssignment_1(), "rule__Motor__NameAssignment_1");
			builder.put(grammarAccess.getMotorAccess().getKindAssignment_2_2(), "rule__Motor__KindAssignment_2_2");
			builder.put(grammarAccess.getRoverProgramAccess().getNameAssignment_1(), "rule__RoverProgram__NameAssignment_1");
			builder.put(grammarAccess.getRoverProgramAccess().getRoverAssignment_4(), "rule__RoverProgram__RoverAssignment_4");
			builder.put(grammarAccess.getRoverProgramAccess().getBlockAssignment_6(), "rule__RoverProgram__BlockAssignment_6");
			builder.put(grammarAccess.getBlock_ImplAccess().getCommandsAssignment_2_2(), "rule__Block_Impl__CommandsAssignment_2_2");
			builder.put(grammarAccess.getBlock_ImplAccess().getCommandsAssignment_2_3_1(), "rule__Block_Impl__CommandsAssignment_2_3_1");
			builder.put(grammarAccess.getBlock_ImplAccess().getTransitionsAssignment_3_2(), "rule__Block_Impl__TransitionsAssignment_3_2");
			builder.put(grammarAccess.getBlock_ImplAccess().getTransitionsAssignment_3_3_1(), "rule__Block_Impl__TransitionsAssignment_3_3_1");
			builder.put(grammarAccess.getRepeatAccess().getCountAssignment_1(), "rule__Repeat__CountAssignment_1");
			builder.put(grammarAccess.getRepeatAccess().getCommandsAssignment_4_2(), "rule__Repeat__CommandsAssignment_4_2");
			builder.put(grammarAccess.getRepeatAccess().getCommandsAssignment_4_3_1(), "rule__Repeat__CommandsAssignment_4_3_1");
			builder.put(grammarAccess.getRepeatAccess().getTransitionsAssignment_5_2(), "rule__Repeat__TransitionsAssignment_5_2");
			builder.put(grammarAccess.getRepeatAccess().getTransitionsAssignment_5_3_1(), "rule__Repeat__TransitionsAssignment_5_3_1");
			builder.put(grammarAccess.getMoveAccess().getNameAssignment_0(), "rule__Move__NameAssignment_0");
			builder.put(grammarAccess.getMoveAccess().getDistanceAssignment_3(), "rule__Move__DistanceAssignment_3");
			builder.put(grammarAccess.getMoveAccess().getSpeedAssignment_5(), "rule__Move__SpeedAssignment_5");
			builder.put(grammarAccess.getSetLightColorAccess().getNameAssignment_0(), "rule__SetLightColor__NameAssignment_0");
			builder.put(grammarAccess.getSetLightColorAccess().getLightsAssignment_5(), "rule__SetLightColor__LightsAssignment_5");
			builder.put(grammarAccess.getSetLightColorAccess().getLightsAssignment_6_1(), "rule__SetLightColor__LightsAssignment_6_1");
			builder.put(grammarAccess.getSetLightColorAccess().getColorAssignment_9_1(), "rule__SetLightColor__ColorAssignment_9_1");
			builder.put(grammarAccess.getRotateAccess().getNameAssignment_0(), "rule__Rotate__NameAssignment_0");
			builder.put(grammarAccess.getRotateAccess().getAngleAssignment_3(), "rule__Rotate__AngleAssignment_3");
			builder.put(grammarAccess.getWaitAccess().getNameAssignment_0(), "rule__Wait__NameAssignment_0");
			builder.put(grammarAccess.getWaitAccess().getDurationAssignment_3(), "rule__Wait__DurationAssignment_3");
			builder.put(grammarAccess.getTerminateAccess().getNameAssignment_0(), "rule__Terminate__NameAssignment_0");
			builder.put(grammarAccess.getTransition_ImplAccess().getSourceAssignment_0(), "rule__Transition_Impl__SourceAssignment_0");
			builder.put(grammarAccess.getTransition_ImplAccess().getTargetAssignment_2(), "rule__Transition_Impl__TargetAssignment_2");
			builder.put(grammarAccess.getDistanceSensorTriggerAccess().getSensorAssignment_1(), "rule__DistanceSensorTrigger__SensorAssignment_1");
			builder.put(grammarAccess.getDistanceSensorTriggerAccess().getOperatorAssignment_2(), "rule__DistanceSensorTrigger__OperatorAssignment_2");
			builder.put(grammarAccess.getDistanceSensorTriggerAccess().getComparisonValueAssignment_3(), "rule__DistanceSensorTrigger__ComparisonValueAssignment_3");
			builder.put(grammarAccess.getDistanceSensorTriggerAccess().getSourceAssignment_5(), "rule__DistanceSensorTrigger__SourceAssignment_5");
			builder.put(grammarAccess.getDistanceSensorTriggerAccess().getTargetAssignment_7(), "rule__DistanceSensorTrigger__TargetAssignment_7");
			builder.put(grammarAccess.getGpsTriggerAccess().getSensorAssignment_1(), "rule__GpsTrigger__SensorAssignment_1");
			builder.put(grammarAccess.getGpsTriggerAccess().getOperatorAssignment_2(), "rule__GpsTrigger__OperatorAssignment_2");
			builder.put(grammarAccess.getGpsTriggerAccess().getComparisonValueAssignment_3(), "rule__GpsTrigger__ComparisonValueAssignment_3");
			builder.put(grammarAccess.getGpsTriggerAccess().getSourceAssignment_5(), "rule__GpsTrigger__SourceAssignment_5");
			builder.put(grammarAccess.getGpsTriggerAccess().getTargetAssignment_7(), "rule__GpsTrigger__TargetAssignment_7");
			builder.put(grammarAccess.getCompassTriggerAccess().getSensorAssignment_1(), "rule__CompassTrigger__SensorAssignment_1");
			builder.put(grammarAccess.getCompassTriggerAccess().getOperatorAssignment_2(), "rule__CompassTrigger__OperatorAssignment_2");
			builder.put(grammarAccess.getCompassTriggerAccess().getComparisonValueAssignment_3(), "rule__CompassTrigger__ComparisonValueAssignment_3");
			builder.put(grammarAccess.getCompassTriggerAccess().getSourceAssignment_5(), "rule__CompassTrigger__SourceAssignment_5");
			builder.put(grammarAccess.getCompassTriggerAccess().getTargetAssignment_7(), "rule__CompassTrigger__TargetAssignment_7");
			builder.put(grammarAccess.getTimeAccess().getValueAssignment_0(), "rule__Time__ValueAssignment_0");
			builder.put(grammarAccess.getTimeAccess().getTimeUnitAssignment_1(), "rule__Time__TimeUnitAssignment_1");
			builder.put(grammarAccess.getAngleAccess().getValueAssignment_0(), "rule__Angle__ValueAssignment_0");
			builder.put(grammarAccess.getAngleAccess().getAngleUnitAssignment_1(), "rule__Angle__AngleUnitAssignment_1");
			builder.put(grammarAccess.getVelocityAccess().getValueAssignment_0(), "rule__Velocity__ValueAssignment_0");
			builder.put(grammarAccess.getVelocityAccess().getVelocityUnitAssignment_1(), "rule__Velocity__VelocityUnitAssignment_1");
			builder.put(grammarAccess.getLengthAccess().getValueAssignment_0(), "rule__Length__ValueAssignment_0");
			builder.put(grammarAccess.getLengthAccess().getLengthUnitAssignment_1(), "rule__Length__LengthUnitAssignment_1");
			builder.put(grammarAccess.getPositionAccess().getXAssignment_1(), "rule__Position__XAssignment_1");
			builder.put(grammarAccess.getPositionAccess().getYAssignment_3(), "rule__Position__YAssignment_3");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private RovermlGrammarAccess grammarAccess;

	@Override
	protected InternalRovermlParser createParser() {
		InternalRovermlParser result = new InternalRovermlParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public RovermlGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(RovermlGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
