/*
 * generated by Xtext 2.14.0
 */
package at.ac.tuwien.big.ide.contentassist.antlr;

import at.ac.tuwien.big.ide.contentassist.antlr.internal.InternalRovermlParser;
import at.ac.tuwien.big.services.RovermlGrammarAccess;
import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class RovermlParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(RovermlGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, RovermlGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getNamedElementAccess().getAlternatives(), "rule__NamedElement__Alternatives");
			builder.put(grammarAccess.getCommandAccess().getAlternatives(), "rule__Command__Alternatives");
			builder.put(grammarAccess.getBlockAccess().getAlternatives(), "rule__Block__Alternatives");
			builder.put(grammarAccess.getTransitionAccess().getAlternatives(), "rule__Transition__Alternatives");
			builder.put(grammarAccess.getTriggeredTransitionAccess().getAlternatives(), "rule__TriggeredTransition__Alternatives");
			builder.put(grammarAccess.getSingleQuantityAccess().getAlternatives(), "rule__SingleQuantity__Alternatives");
			builder.put(grammarAccess.getSensorAccess().getAlternatives(), "rule__Sensor__Alternatives");
			builder.put(grammarAccess.getComponentAccess().getAlternatives(), "rule__Component__Alternatives");
			builder.put(grammarAccess.getActuatorAccess().getAlternatives(), "rule__Actuator__Alternatives");
			builder.put(grammarAccess.getQuantityAccess().getAlternatives(), "rule__Quantity__Alternatives");
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getEFloatAccess().getAlternatives_4_0(), "rule__EFloat__Alternatives_4_0");
			builder.put(grammarAccess.getColorAccess().getAlternatives(), "rule__Color__Alternatives");
			builder.put(grammarAccess.getTimeUnitAccess().getAlternatives(), "rule__TimeUnit__Alternatives");
			builder.put(grammarAccess.getAngleUnitAccess().getAlternatives(), "rule__AngleUnit__Alternatives");
			builder.put(grammarAccess.getVelocityUnitAccess().getAlternatives(), "rule__VelocityUnit__Alternatives");
			builder.put(grammarAccess.getLengthUnitAccess().getAlternatives(), "rule__LengthUnit__Alternatives");
			builder.put(grammarAccess.getComparisonOperatorAccess().getAlternatives(), "rule__ComparisonOperator__Alternatives");
			builder.put(grammarAccess.getRoverSystemAccess().getGroup(), "rule__RoverSystem__Group__0");
			builder.put(grammarAccess.getRoverProgramAccess().getGroup(), "rule__RoverProgram__Group__0");
			builder.put(grammarAccess.getCommandAccess().getGroup_5(), "rule__Command__Group_5__0");
			builder.put(grammarAccess.getMoveAccess().getGroup(), "rule__Move__Group__0");
			builder.put(grammarAccess.getSetLightColorAccess().getGroup(), "rule__SetLightColor__Group__0");
			builder.put(grammarAccess.getRotateAccess().getGroup(), "rule__Rotate__Group__0");
			builder.put(grammarAccess.getWaitAccess().getGroup(), "rule__Wait__Group__0");
			builder.put(grammarAccess.getRepeatAccess().getGroup(), "rule__Repeat__Group__0");
			builder.put(grammarAccess.getRoverAccess().getGroup(), "rule__Rover__Group__0");
			builder.put(grammarAccess.getBlockAccess().getGroup_1(), "rule__Block__Group_1__0");
			builder.put(grammarAccess.getTransitionAccess().getGroup_1(), "rule__Transition__Group_1__0");
			builder.put(grammarAccess.getTriggeredTransitionAccess().getGroup_2(), "rule__TriggeredTransition__Group_2__0");
			builder.put(grammarAccess.getTriggeredTransitionAccess().getGroup_2_1(), "rule__TriggeredTransition__Group_2_1__0");
			builder.put(grammarAccess.getTriggeredTransitionAccess().getGroup_2_4(), "rule__TriggeredTransition__Group_2_4__0");
			builder.put(grammarAccess.getGPSAccess().getGroup(), "rule__GPS__Group__0");
			builder.put(grammarAccess.getDistanceSensorAccess().getGroup(), "rule__DistanceSensor__Group__0");
			builder.put(grammarAccess.getCompassAccess().getGroup(), "rule__Compass__Group__0");
			builder.put(grammarAccess.getSingleQuantityAccess().getGroup_3(), "rule__SingleQuantity__Group_3__0");
			builder.put(grammarAccess.getTimeAccess().getGroup(), "rule__Time__Group__0");
			builder.put(grammarAccess.getAngleAccess().getGroup(), "rule__Angle__Group__0");
			builder.put(grammarAccess.getVelocityAccess().getGroup(), "rule__Velocity__Group__0");
			builder.put(grammarAccess.getLightAccess().getGroup(), "rule__Light__Group__0");
			builder.put(grammarAccess.getLengthAccess().getGroup(), "rule__Length__Group__0");
			builder.put(grammarAccess.getSensorAccess().getGroup_2(), "rule__Sensor__Group_2__0");
			builder.put(grammarAccess.getMotorAccess().getGroup(), "rule__Motor__Group__0");
			builder.put(grammarAccess.getTerminateAccess().getGroup(), "rule__Terminate__Group__0");
			builder.put(grammarAccess.getComponentAccess().getGroup_1(), "rule__Component__Group_1__0");
			builder.put(grammarAccess.getComponentAccess().getGroup_1_1(), "rule__Component__Group_1_1__0");
			builder.put(grammarAccess.getComponentAccess().getGroup_1_1_1(), "rule__Component__Group_1_1_1__0");
			builder.put(grammarAccess.getDistanceSensorTriggerAccess().getGroup(), "rule__DistanceSensorTrigger__Group__0");
			builder.put(grammarAccess.getGpsTriggerAccess().getGroup(), "rule__GpsTrigger__Group__0");
			builder.put(grammarAccess.getCompassTriggerAccess().getGroup(), "rule__CompassTrigger__Group__0");
			builder.put(grammarAccess.getQuantityAccess().getGroup_1(), "rule__Quantity__Group_1__0");
			builder.put(grammarAccess.getPositionAccess().getGroup(), "rule__Position__Group__0");
			builder.put(grammarAccess.getPositionAccess().getGroup_3(), "rule__Position__Group_3__0");
			builder.put(grammarAccess.getPositionAccess().getGroup_4(), "rule__Position__Group_4__0");
			builder.put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
			builder.put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
			builder.put(grammarAccess.getEFloatAccess().getGroup(), "rule__EFloat__Group__0");
			builder.put(grammarAccess.getEFloatAccess().getGroup_4(), "rule__EFloat__Group_4__0");
			builder.put(grammarAccess.getEIntAccess().getGroup(), "rule__EInt__Group__0");
			builder.put(grammarAccess.getRoverSystemAccess().getRoversAssignment_5(), "rule__RoverSystem__RoversAssignment_5");
			builder.put(grammarAccess.getRoverSystemAccess().getRoverProgramsAssignment_9(), "rule__RoverSystem__RoverProgramsAssignment_9");
			builder.put(grammarAccess.getRoverProgramAccess().getNameAssignment_2(), "rule__RoverProgram__NameAssignment_2");
			builder.put(grammarAccess.getRoverProgramAccess().getBlockAssignment_4(), "rule__RoverProgram__BlockAssignment_4");
			builder.put(grammarAccess.getCommandAccess().getIncomingAssignment_5_2(), "rule__Command__IncomingAssignment_5_2");
			builder.put(grammarAccess.getCommandAccess().getOutgoingAssignment_5_4(), "rule__Command__OutgoingAssignment_5_4");
			builder.put(grammarAccess.getMoveAccess().getSpeedAssignment_2(), "rule__Move__SpeedAssignment_2");
			builder.put(grammarAccess.getMoveAccess().getDistanceAssignment_3(), "rule__Move__DistanceAssignment_3");
			builder.put(grammarAccess.getSetLightColorAccess().getColorAssignment_3(), "rule__SetLightColor__ColorAssignment_3");
			builder.put(grammarAccess.getSetLightColorAccess().getLightsAssignment_4(), "rule__SetLightColor__LightsAssignment_4");
			builder.put(grammarAccess.getRotateAccess().getAngleAssignment_2(), "rule__Rotate__AngleAssignment_2");
			builder.put(grammarAccess.getWaitAccess().getDurationAssignment_2(), "rule__Wait__DurationAssignment_2");
			builder.put(grammarAccess.getRepeatAccess().getCountAssignment_4(), "rule__Repeat__CountAssignment_4");
			builder.put(grammarAccess.getRoverAccess().getNameAssignment_2(), "rule__Rover__NameAssignment_2");
			builder.put(grammarAccess.getRoverAccess().getComponentsAssignment_6(), "rule__Rover__ComponentsAssignment_6");
			builder.put(grammarAccess.getBlockAccess().getCommandsAssignment_1_3(), "rule__Block__CommandsAssignment_1_3");
			builder.put(grammarAccess.getBlockAccess().getTransitionsAssignment_1_4(), "rule__Block__TransitionsAssignment_1_4");
			builder.put(grammarAccess.getTransitionAccess().getSourceAssignment_1_2(), "rule__Transition__SourceAssignment_1_2");
			builder.put(grammarAccess.getTransitionAccess().getTargetAssignment_1_4(), "rule__Transition__TargetAssignment_1_4");
			builder.put(grammarAccess.getTriggeredTransitionAccess().getSensorAssignment_2_1_1(), "rule__TriggeredTransition__SensorAssignment_2_1_1");
			builder.put(grammarAccess.getTriggeredTransitionAccess().getOperatorAssignment_2_3(), "rule__TriggeredTransition__OperatorAssignment_2_3");
			builder.put(grammarAccess.getTriggeredTransitionAccess().getComparisonValueAssignment_2_4_1(), "rule__TriggeredTransition__ComparisonValueAssignment_2_4_1");
			builder.put(grammarAccess.getGPSAccess().getNameAssignment_2(), "rule__GPS__NameAssignment_2");
			builder.put(grammarAccess.getDistanceSensorAccess().getNameAssignment_2(), "rule__DistanceSensor__NameAssignment_2");
			builder.put(grammarAccess.getCompassAccess().getNameAssignment_2(), "rule__Compass__NameAssignment_2");
			builder.put(grammarAccess.getSingleQuantityAccess().getValueAssignment_3_3(), "rule__SingleQuantity__ValueAssignment_3_3");
			builder.put(grammarAccess.getTimeAccess().getTimeUnitAssignment_1(), "rule__Time__TimeUnitAssignment_1");
			builder.put(grammarAccess.getAngleAccess().getAngleUnitAssignment_1(), "rule__Angle__AngleUnitAssignment_1");
			builder.put(grammarAccess.getVelocityAccess().getVelocityUnitAssignment_1(), "rule__Velocity__VelocityUnitAssignment_1");
			builder.put(grammarAccess.getLightAccess().getNameAssignment_2(), "rule__Light__NameAssignment_2");
			builder.put(grammarAccess.getLengthAccess().getLengthUnitAssignment_3(), "rule__Length__LengthUnitAssignment_3");
			builder.put(grammarAccess.getSensorAccess().getLastSensedValueAssignment_2_2(), "rule__Sensor__LastSensedValueAssignment_2_2");
			builder.put(grammarAccess.getMotorAccess().getNameAssignment_2(), "rule__Motor__NameAssignment_2");
			builder.put(grammarAccess.getComponentAccess().getKindAssignment_1_1_1_1(), "rule__Component__KindAssignment_1_1_1_1");
			builder.put(grammarAccess.getPositionAccess().getXAssignment_3_1(), "rule__Position__XAssignment_3_1");
			builder.put(grammarAccess.getPositionAccess().getYAssignment_4_1(), "rule__Position__YAssignment_4_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private RovermlGrammarAccess grammarAccess;

	@Override
	protected InternalRovermlParser createParser() {
		InternalRovermlParser result = new InternalRovermlParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public RovermlGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(RovermlGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
